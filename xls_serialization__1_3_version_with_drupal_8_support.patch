diff --git a/composer.json b/composer.json
index f223e0e..fec7996 100644
--- a/composer.json
+++ b/composer.json
@@ -2,8 +2,8 @@
   "name": "drupal/xls_serialization",
   "description": "Provides Excel as a serialization format.",
   "type": "drupal-module",
-  "license": "GPL-2.0+",
+  "license": "GPL-2.0-or-later",
   "require": {
-    "phpoffice/phpspreadsheet": "^1.0@stable"
+    "phpoffice/phpspreadsheet": "^1.26"
   }
 }
diff --git a/config/schema/xls_serialization.views.schema.yml b/config/schema/xls_serialization.views.schema.yml
new file mode 100644
index 0000000..deda527
--- /dev/null
+++ b/config/schema/xls_serialization.views.schema.yml
@@ -0,0 +1,64 @@
+# Schema for the views plugins of the Serialization (Excel) module.
+
+views.display.excel_export:
+  type: views.display.rest_export
+  label: 'Excel export display options'
+  mapping:
+    filename:
+      type: string
+      label: 'Filename'
+    header_bold:
+      type: boolean
+      label: 'Header Bold'
+    header_italic:
+      type: boolean
+      label: 'Header Italic'
+    header_background_color:
+      type: string
+      label: 'Header Background Color'
+    header_text_color:
+      type: string
+      label: 'Header Text Color'
+
+views.style.excel_export:
+  type: views.style.serializer
+  label: 'Excel export output format'
+  mapping:
+    xls_settings:
+      type: mapping
+      label: 'XLS(X) settings'
+      mapping:
+        xls_format:
+          type: string
+          label: 'Format'
+        metadata:
+          type: mapping
+          label: 'Document metadata'
+          mapping:
+            creator:
+              type: string
+              label: 'Author/creator name'
+            last_modified_by:
+              type: string
+              label: 'Last modified by'
+            title:
+              type: string
+              label: 'Title'
+            description:
+              type: string
+              label: 'Description'
+            subject:
+              type: string
+              label: 'Subject'
+            keywords:
+              type: string
+              label: 'Keywords'
+            category:
+              type: string
+              label: 'Category'
+            manager:
+              type: string
+              label: 'Manager'
+            company:
+              type: string
+              label: 'Company'
diff --git a/src/Encoder/Xls.php b/src/Encoder/Xls.php
index 6a2567d..8d6187e 100644
--- a/src/Encoder/Xls.php
+++ b/src/Encoder/Xls.php
@@ -50,7 +50,7 @@ class Xls implements EncoderInterface {
   /**
    * {@inheritdoc}
    */
-  public function encode($data, $format, array $context = []) {
+  public function encode($data, $format, array $context = []):string {
     switch (gettype($data)) {
       case 'array':
         // Nothing to do.
@@ -150,7 +150,7 @@ class Xls implements EncoderInterface {
   /**
    * {@inheritdoc}
    */
-  public function supportsEncoding($format) {
+  public function supportsEncoding($format): bool {
     return $format === static::$format;
   }

diff --git a/src/EventSubscriber/Subscriber.php b/src/EventSubscriber/Subscriber.php
index ef61c17..84be0b1 100644
--- a/src/EventSubscriber/Subscriber.php
+++ b/src/EventSubscriber/Subscriber.php
@@ -3,7 +3,7 @@
 namespace Drupal\xls_serialization\EventSubscriber;

 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ -14,7 +14,7 @@ class Subscriber implements EventSubscriberInterface {
   /**
    * {@inheritdoc}
    */
-  public static function getSubscribedEvents() {
+  public static function getSubscribedEvents():array {
     $events[KernelEvents::REQUEST][] = ['onKernelRequest'];
     return $events;
   }
@@ -22,10 +22,10 @@ class Subscriber implements EventSubscriberInterface {
   /**
    * Register content formats on the request object.
    *
-   * @param Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to get the request object to register on.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     $event->getRequest()->setFormat('xls', ['application/vnd.ms-excel']);
     $event->getRequest()->setFormat('xlsx', ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet']);
   }
diff --git a/src/Plugin/views/style/ExcelExport.php b/src/Plugin/views/style/ExcelExport.php
index fa10cb4..61cac7a 100644
--- a/src/Plugin/views/style/ExcelExport.php
+++ b/src/Plugin/views/style/ExcelExport.php
@@ -41,7 +41,8 @@ class ExcelExport extends Serializer {
     parent::__construct($configuration, $plugin_id, $plugin_definition, $serializer, $serializer_formats, $serializer_format_providers);

     $this->formats = ['xls', 'xlsx'];
-    $this->formatProviders = ['xls' => 'xls_serialization', 'xlsx' => 'xls_serialization'];
+    $this->formatProviders =
+    ['xls' => 'xls_serialization', 'xlsx' => 'xls_serialization'];
   }

   /**
@@ -162,7 +163,6 @@ class ExcelExport extends Serializer {
    */
   public function attachTo(array &$build, $display_id, Url $url, $title) {
     // @todo This mostly hard-codes CSV handling. Figure out how to abstract.
-
     $url_options = [];
     $input = $this->view->getExposedInput();
     if ($input) {
diff --git a/tests/src/Unit/EventSubscriber/SubscriberTest.php b/tests/src/Unit/EventSubscriber/SubscriberTest.php
index 8d9e022..7438a0a 100644
--- a/tests/src/Unit/EventSubscriber/SubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/SubscriberTest.php
@@ -5,7 +5,7 @@ namespace Drupal\Tests\xls_serialization\Unit\EventSubscriber;
 use Drupal\Tests\UnitTestCase;
 use Drupal\xls_serialization\EventSubscriber\Subscriber;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
+use Symfony\Component\HttpKernel\Event\RequestEvent;

 /**
  * Tests the XLS serialization event subscriber.
@@ -24,7 +24,7 @@ class SubscriberTest extends UnitTestCase {
     $request = $this->prophesize(Request::class);
     $request->setFormat('xls', ['application/vnd.ms-excel'])->shouldBeCalled();
     $request->setFormat('xlsx', ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'])->shouldBeCalled();
-    $event = $this->prophesize(GetResponseEvent::class);
+    $event = $this->prophesize(RequestEvent::class);
     $event->getRequest()->willReturn($request->reveal());
     $subscriber = new Subscriber();
     $subscriber->onKernelRequest($event->reveal());
diff --git a/xls_serialization.info.yml b/xls_serialization.info.yml
index c86f6f9..1a6a986 100644
--- a/xls_serialization.info.yml
+++ b/xls_serialization.info.yml
@@ -1,8 +1,8 @@
 name: 'Serialization (Excel)'
 type: module
 description: 'Provides Excel (xls) as a serialization format.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8.8.0 || ^9.0
 package: Web services
 dependencies:
+  - drupal:rest
   - drupal:serialization
